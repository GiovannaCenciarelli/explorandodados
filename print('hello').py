{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9519795,"sourceType":"datasetVersion","datasetId":5795981}],"dockerImageVersionId":30775,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Caminho do arquivo CSV no Kaggle\narquivo_csv = '/kaggle/input/vendastesourodireto/VendasTesouroDireto.csv'\n\n# Ler o arquivo CSV com delimitador de ponto e vírgula\ndf = pd.read_csv(arquivo_csv, delimiter=';')\n\n# Remover espaços nos nomes das colunas\ndf.columns = df.columns.str.strip()\n\n# Exibir os nomes das colunas\nprint(\"Nomes das colunas após a remoção de espaços:\")\nprint(df.columns)\n\n# Exibir as primeiras 20 linhas do DataFrame\nrelatorio = df.head(20)\n\n# Exibir o relatório no console\nprint(\"\\nRelatório - Primeiras 20 Linhas:\")\nprint(relatorio)\n\n# Verificar se a coluna \"Tipo de Título\" está presente no relatorio\nprint(\"\\nVerificando a presença da coluna 'Tipo de Título':\")\nprint(relatorio.columns)\n\n# Tratar a coluna 'Valor' para converter os valores para numéricos\n# 1. Substituir vírgulas por pontos usando .loc\nrelatorio.loc[:, 'Valor'] = relatorio['Valor'].astype(str).str.replace(',', '.', regex=False)\n# 2. Converter para numérico, forçando erros a se tornarem NaN\nrelatorio.loc[:, 'Valor'] = pd.to_numeric(relatorio['Valor'], errors='coerce')\n\n# Calcular a média dos valores da coluna 'Valor'\nmedia_valores = relatorio['Valor'].mean()\n\n# Exibir a média\nprint(\"\\nMédia dos Valores das Primeiras 20 Linhas:\")\nprint(media_valores)\n\n# Gráfico de barras para os valores\nplt.figure(figsize=(10, 6))\nsns.barplot(x='Tipo de Título', y='Valor', data=relatorio, palette='viridis')\nplt.title('Valores por Tipo de Título')\nplt.xlabel('Tipo de Título')\nplt.ylabel('Valor')\nplt.xticks(rotation=45)\nplt.tight_layout()  # Ajustar layout\nplt.show()\n\n# Gráfico de dispersão entre 'Valor' e 'Quantidade'\nplt.figure(figsize=(10, 6))\nsns.scatterplot(x='Quantidade', y='Valor', data=relatorio, hue='Tipo de Título', palette='viridis', s=100)\nplt.title('Dispersão entre Quantidade e Valor')\nplt.xlabel('Quantidade')\nplt.ylabel('Valor')\nplt.tight_layout()  # Ajustar layout\nplt.show()\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-10-01T00:24:41.295878Z","iopub.execute_input":"2024-10-01T00:24:41.297130Z","iopub.status.idle":"2024-10-01T00:24:42.289540Z","shell.execute_reply.started":"2024-10-01T00:24:41.297081Z","shell.execute_reply":"2024-10-01T00:24:42.287951Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Nomes das colunas após a remoção de espaços:\nIndex(['Tipo Titulo', 'Vencimento do Titulo', 'Data Venda', 'PU', 'Quantidade',\n       'Valor'],\n      dtype='object')\n\nRelatório - Primeiras 20 Linhas:\n                               Tipo Titulo Vencimento do Titulo  Data Venda  \\\n0                            Tesouro IPCA+           15/05/2045  12/09/2017   \n1                        Tesouro Prefixado           01/01/2020  12/09/2017   \n2                        Tesouro Prefixado           01/01/2023  12/09/2017   \n3   Tesouro Prefixado com Juros Semestrais           01/01/2027  12/09/2017   \n4                            Tesouro IPCA+           15/05/2035  12/09/2017   \n5       Tesouro IPCA+ com Juros Semestrais           15/05/2035  12/09/2017   \n6       Tesouro IPCA+ com Juros Semestrais           15/08/2026  12/09/2017   \n7                        Tesouro Prefixado           01/01/2023  13/09/2017   \n8       Tesouro IPCA+ com Juros Semestrais           15/08/2026  13/09/2017   \n9                            Tesouro IPCA+           15/05/2045  13/09/2017   \n10                           Tesouro IPCA+           15/08/2024  13/09/2017   \n11                           Tesouro IPCA+           15/05/2035  13/09/2017   \n12      Tesouro IPCA+ com Juros Semestrais           15/08/2050  13/09/2017   \n13                       Tesouro Prefixado           01/01/2020  13/09/2017   \n14  Tesouro Prefixado com Juros Semestrais           01/01/2027  13/09/2017   \n15                           Tesouro Selic           01/03/2023  13/09/2017   \n16      Tesouro IPCA+ com Juros Semestrais           15/05/2035  13/09/2017   \n17                           Tesouro IPCA+           15/08/2024  14/09/2017   \n18                           Tesouro Selic           01/03/2023  14/09/2017   \n19                       Tesouro Prefixado           01/01/2023  14/09/2017   \n\n             PU Quantidade        Valor  \n0    778,721441    4302,01   3350067,42  \n1    833,343235    1996,97   1664161,43  \n2    619,889124   13769,55   8535594,28  \n3   1041,770972    1501,04   1563739,89  \n4   1269,021535    5893,94   7479536,78  \n5   3437,886733     255,15    877176,79  \n6   3279,657967     323,42   1060706,97  \n7    619,532867   12455,05   7716312,83  \n8   3285,327741     317,75   1043912,88  \n9    782,038860    4030,30   3151851,21  \n10  2199,023381    2691,02   5917615,89  \n11  1272,369069    4799,61   6106875,30  \n12  3473,206429     706,44   2453611,94  \n13   833,190726    3553,67   2960884,88  \n14  1038,585970    2068,04   2147837,32  \n15  9080,694414    4133,28  37533052,60  \n16  3444,699385     331,72   1142675,67  \n17  2192,307708    2521,15   5527136,57  \n18  9083,515725    4150,23  37698679,46  \n19   616,463194   12217,80   7531824,01  \n\nVerificando a presença da coluna 'Tipo de Título':\nIndex(['Tipo Titulo', 'Vencimento do Titulo', 'Data Venda', 'PU', 'Quantidade',\n       'Valor'],\n      dtype='object')\n\nMédia dos Valores das Primeiras 20 Linhas:\n7273162.706\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Cell \u001b[0;32mIn[2], line 44\u001b[0m\n\u001b[1;32m     42\u001b[0m \u001b[38;5;66;03m# Gráfico de barras para os valores\u001b[39;00m\n\u001b[1;32m     43\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m10\u001b[39m, \u001b[38;5;241m6\u001b[39m))\n\u001b[0;32m---> 44\u001b[0m \u001b[43msns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mbarplot\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mTipo de Título\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mValor\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mrelatorio\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpalette\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mviridis\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m     45\u001b[0m plt\u001b[38;5;241m.\u001b[39mtitle(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mValores por Tipo de Título\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m     46\u001b[0m plt\u001b[38;5;241m.\u001b[39mxlabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTipo de Título\u001b[39m\u001b[38;5;124m'\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:2755\u001b[0m, in \u001b[0;36mbarplot\u001b[0;34m(data, x, y, hue, order, hue_order, estimator, errorbar, n_boot, units, seed, orient, color, palette, saturation, width, errcolor, errwidth, capsize, dodge, ci, ax, **kwargs)\u001b[0m\n\u001b[1;32m   2752\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m estimator \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28mlen\u001b[39m:\n\u001b[1;32m   2753\u001b[0m     estimator \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124msize\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 2755\u001b[0m plotter \u001b[38;5;241m=\u001b[39m \u001b[43m_BarPlotter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhue\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43morder\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhue_order\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2756\u001b[0m \u001b[43m                      \u001b[49m\u001b[43mestimator\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrorbar\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn_boot\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43munits\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mseed\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2757\u001b[0m \u001b[43m                      \u001b[49m\u001b[43morient\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolor\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpalette\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msaturation\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2758\u001b[0m \u001b[43m                      \u001b[49m\u001b[43mwidth\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrcolor\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrwidth\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcapsize\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdodge\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2760\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m ax \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   2761\u001b[0m     ax \u001b[38;5;241m=\u001b[39m plt\u001b[38;5;241m.\u001b[39mgca()\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:1530\u001b[0m, in \u001b[0;36m_BarPlotter.__init__\u001b[0;34m(self, x, y, hue, data, order, hue_order, estimator, errorbar, n_boot, units, seed, orient, color, palette, saturation, width, errcolor, errwidth, capsize, dodge)\u001b[0m\n\u001b[1;32m   1525\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__init__\u001b[39m(\u001b[38;5;28mself\u001b[39m, x, y, hue, data, order, hue_order,\n\u001b[1;32m   1526\u001b[0m              estimator, errorbar, n_boot, units, seed,\n\u001b[1;32m   1527\u001b[0m              orient, color, palette, saturation, width,\n\u001b[1;32m   1528\u001b[0m              errcolor, errwidth, capsize, dodge):\n\u001b[1;32m   1529\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"Initialize the plotter.\"\"\"\u001b[39;00m\n\u001b[0;32m-> 1530\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mestablish_variables\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhue\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43morient\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1531\u001b[0m \u001b[43m                             \u001b[49m\u001b[43morder\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mhue_order\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43munits\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1532\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mestablish_colors(color, palette, saturation)\n\u001b[1;32m   1533\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mestimate_statistic(estimator, errorbar, n_boot, seed)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/seaborn/categorical.py:541\u001b[0m, in \u001b[0;36m_CategoricalPlotter.establish_variables\u001b[0;34m(self, x, y, hue, data, orient, order, hue_order, units)\u001b[0m\n\u001b[1;32m    539\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(var, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    540\u001b[0m         err \u001b[38;5;241m=\u001b[39m \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCould not interpret input \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mvar\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m--> 541\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(err)\n\u001b[1;32m    543\u001b[0m \u001b[38;5;66;03m# Figure out the plotting orientation\u001b[39;00m\n\u001b[1;32m    544\u001b[0m orient \u001b[38;5;241m=\u001b[39m infer_orient(\n\u001b[1;32m    545\u001b[0m     x, y, orient, require_numeric\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mrequire_numeric\n\u001b[1;32m    546\u001b[0m )\n","\u001b[0;31mValueError\u001b[0m: Could not interpret input 'Tipo de Título'"],"ename":"ValueError","evalue":"Could not interpret input 'Tipo de Título'","output_type":"error"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 0 Axes>"},"metadata":{}}]}]}